class Singleton
{
    private static Singleton instance;
    /**程序运行时创建一个静态只读的进程辅助对象*/
    private static readOnly object syncRoot = new object();

    /**构造方法私有化*/
    private Singleton()
    {
    }

    public static Singleton GetInstance()
    {
        lock(syncRoot)
        {
            if(instance == null)
            {
                 instance = new Singleton();
            }
        }
        return instance;
    }
}